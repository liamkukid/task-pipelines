version: "3.4"

networks:
  tp-network:
    driver: bridge

services:
  mongo:
    container_name: tp-mongo
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: tasks
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27017:27017
    networks:
      - tp-network

  mongo-express:
    image: mongo-express
    container_name: tp-mongo-express
    restart: unless-stopped
    ports:
      - 27019:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
    networks:
      - tp-network

  backend:
    container_name: tp-backend
    image: tp/backend
    restart: unless-stopped
    depends_on:
      - mongo
    build:
      context: ./src/TaskPipelines
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:5001
      ASPNETCORE_HTTPS_PORT: 5001
      ConnectionStrings:Mongo: mongodb://admin:admin@mongo:27017
    ports:
      - 5001:5001
    networks:
      - tp-network
    volumes:
      - ~/.aspnet/https:/https:ro
  
  frontend:
    container_name: tp-frontend
    image: tp/frontend
    depends_on:
      - backend
    build:
      context: ./src/Frontend
      dockerfile: Dockerfile
    ports:
      - 8080:80
    networks:
      - tp-network